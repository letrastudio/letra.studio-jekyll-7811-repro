::selection {
  background: rgba($yellowgreen, 0.5);
  color: black;
  @media (prefers-color-scheme: dark) {
    background: rgba($magenta, 0.5);
    color: white;
  }
}




// Global Typography
// -----------------------------------------------------------------------------

body {
  font-feature-settings: "ss07", "ss12";
}

a[href] {
  text-underline-offset: $underline-offset;
  &:focus {
    color: $link-hover-color;
    color: var(--link-hover-color);
  }
}

#{$all-headings} {
  font-weight: normal;
}




// Main typography
// -----------------------------------------------------------------------------

main {
  font-size: 0.875em;
  &.homepage {
    font-size: 1em;
  }
  @include media(min-width 22rem) {
    font-size: 1em;
  }
  
  a[href] {
    text-decoration: underline;
    text-decoration-thickness: $underline-thickness;
    @supports not ((text-decoration-thickness: $underline-thickness) and (text-underline-offset: $underline-offset)) {
      text-decoration: none;
      border-bottom: $border-underline-thickness solid;
    }
  }
}

.section-header .text {
  font-size: 0.9375em;
  @include media(min-width 25rem) {
    font-size: 1em;
  }
}

picture > img {
  display: block;
}

figure video {
  width: 100%;
}




// Body Text Typography
// -----------------------------------------------------------------------------


.text {
  
  a[href] {
    color: inherit;
    text-decoration-color: $link-color;
    text-decoration-color: var(--link-color);
    @supports not ((text-decoration-thickness: $underline-thickness) and (text-underline-offset: $underline-offset)) {
      border-color: $link-color;
      border-color: var(--link-color);
    }
    &:hover,
    &:focus {
      color: $link-hover-color;
      color: var(--link-hover-color);
    }
    &:active {
      color: $link-active-color;
      color: var(--link-active-color);
    }
    &:hover,
    &:focus,
    &:active {
      text-decoration-color: currentColor;
    }
  }
  
  // Lists in .text are always styled
  @if $reset-list-styles == true {
    ul, ol, dd {
      padding-left: $list-indent;
      @supports (-webkit-padding-start: 1em) {
        padding-left: 0;
        -webkit-padding-start: $list-indent;
      }
      @supports (padding-inline-start: 1em) {
        padding-left: 0;
        padding-inline-start: $list-indent;
      }
    }
    ul {
      list-style-type: disc;
    }
    ol {
      list-style-type: decimal;
    }
    dt {
      font-weight: bolder;
    }
  }
  
  // Add margins to media and embed elements
  > {
    #{$media-elements, $embed-elements}, .embed-container {
      display: block;
      @include spacing(1);
    }
  }
  
  // Target markdown images
  p > img:only-child {
    display: block;
  }
  
  // Constrain widths of text elements
  #{$text-block-elements} { max-width: $text-max-width }
  h1 { max-width: $text-max-width / strip-unit($h1-font-size) }
  h2 { max-width: $text-max-width / strip-unit($h2-font-size) }
  h3 { max-width: $text-max-width / strip-unit($h3-font-size) }
  h4 { max-width: $text-max-width / strip-unit($h4-font-size) }
  h5 { max-width: $text-max-width / strip-unit($h5-font-size) }
  h6 { max-width: $text-max-width / strip-unit($h6-font-size) }
  > pre {
    max-width: $text-max-width / strip-unit($pre-font-size);
  }
  > .highlight, > .highlighter-rouge {
    max-width: $text-max-width;
  }
  
  hr {
    max-width: $text-max-width;
    @include spacing(1.5);
  }
  
  // adjust colors inside blockquotes
  blockquote {
    a[href] {
      text-decoration-color: currentColor;
      @supports not ((text-decoration-thickness: $underline-thickness) and (text-underline-offset: $underline-offset)) {
        border-color: currentColor;
      }
    }
    code, samp, kbd {
      color: currentColor;
    }
  }
}
